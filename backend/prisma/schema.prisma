generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  name          String
  passwordHash  String
  role          Role         @default(USER)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  transactions  Transaction[]
  activities    Activity[]   @relation("UserActivities")
  bookings      Booking[]
}

model Activity {
  id          String      @id @default(uuid())
  title       String
  description String
  city        String
  priceFrom   Float
  image       String
  category    String
  rating      Float
  duration    String
  groupSize   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  users       User[]      @relation("UserActivities")
  bookings    Booking[]
}

model Booking {
  id          String      @id @default(uuid())
  userId      String
  activityId  String
  date        DateTime
  groupSize   Int
  status      BookingStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  activity    Activity    @relation(fields: [activityId], references: [id])
  transaction Transaction?
}

model Transaction {
  id          String    @id @default(uuid())
  bookingId   String    @unique
  amount      Float
  currency    String    @default("gbp")
  status      PaymentStatus
  stripeId    String?   @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  booking     Booking   @relation(fields: [bookingId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}